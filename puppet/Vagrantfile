# -*- mode: ruby -*-
# vi: set ft=ruby :

nxos_box_name = "nxosv/7-0-3-i5-2"

installers = Dir.entries(File.dirname(__FILE__)).select { |f| f =~ /puppet-enterprise.*.tar.gz/ }
if installers.empty?
  fail("No installer found, please place a Puppet Enterprise tgz file in the same directory as Vagrantfile")
end

# If there is more than one installer in the directory we
# use the latest one
installer = installers.last

Vagrant.configure(2) do |config|
  config.vm.define "master" do |master|
    master.vm.box = "ubuntu/xenial64"
    if Vagrant.has_plugin?("vagrant-cachier")
      # Configure cached packages to be shared between instances of the same base box.
      # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage
      config.cache.scope = :box
    end

    master.vm.synced_folder "./environment_production", "/etc/puppetlabs/code/environments/production"

    master.vm.provider "virtualbox" do |vb|
      #   # Display the VirtualBox GUI when booting the machine
      #   vb.gui = true
      #
      #   # Customize the amount of memory on the VM:
        vb.memory = "4096"
    end

    master.vm.network "private_network", ip: "192.168.1.254", virtualbox__intnet: "nxosv_network1"
    

    master.vm.hostname = "master"
#    master.vm.provision "shell", inline: %Q{
#          mkdir /root/pe
#          tar -xv -C /root/pe --strip 1 -f /vagrant/#{installer}
#          cd /root/pe
#          ./puppet-enterprise-installer -y -c /vagrant/pe.conf
#          echo '*' > /etc/puppetlabs/puppet/autosign.conf
#          (/opt/puppetlabs/bin/puppet agent -t ; true)
#        }

     master.vm.provision "shell", privileged: false, inline: <<-SHELL
       sudo wget https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb
       sudo dpkg -i puppetlabs-release-pc1-xenial.deb
       sudo apt-get update
       sudo apt-get -y install puppetserver
       sudo sh -c 'echo "dns_alt_names = localhost, master" >> /etc/puppetlabs/puppet/puppet.conf'
       sudo sh -c 'echo "autosign = true" >> /etc/puppetlabs/puppet/puppet.conf'
       sudo service puppetserver start
       #sudo /opt/puppetlabs/bin/puppet module install puppetlabs-ciscopuppet
     SHELL

  end


  config.vm.define "n9kv1" do |n9kv1|
        n9kv1.vm.box = nxos_box_name

        if Vagrant.has_plugin?("vagrant-cachier")
          config.cache.disable!
        end

        n9kv1.ssh.insert_key = false
        n9kv1.vm.boot_timeout = 420
        n9kv1.vm.synced_folder '.', '/vagrant', disabled: true
        n9kv1.vm.network "forwarded_port", guest: 80, host: 8080, auto_correct: true
        n9kv1.vm.network "private_network", ip: "192.168.1.2", auto_config: false, virtualbox__intnet: "nxosv_network1"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network2"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network3"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network4"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network5"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network6"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network7"
        n9kv1.vm.provider :virtualbox do |vb|
                vb.customize ['modifyvm',:id,'--uartmode1','server','\\\\.\pipe\COM1']
                vb.customize ['modifyvm',:id,'--nicpromisc2','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc3','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc4','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc5','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc6','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc7','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc8','allow-all']
                vb.customize "pre-boot", [
                       "storageattach", :id,
                       "--storagectl", "SATA",
                       "--port", "1",
                       "--device", "0",
                       "--type", "dvddrive",
                       "--medium", "./nxos_config.iso",
                ]
        end
        n9kv1.vm.provision "shell", privileged: true, inline: <<-SHELL
          sleep 30 #otherwise the interfaces might not be ready for configuration

          # Configure Eth1/1 with unique MAC and IP

          echo -e 'hostname n9kv1\nvrf context management\n ip route 0.0.0.0/0 10.0.2.3\ndefault interface Ethernet1/1\ninterface Ethernet1/1\n no shutdown\n no switchport\n\n mac-address 1.1.1'> /tmp/mac-cfg
          sudo vsh -r /tmp/mac-cfg
          sudo ip add add 192.168.1.1/24 dev Eth1-1

          echo "192.168.1.254    master.unimelb.net.au master">>/etc/hosts
          sudo bash -c  'echo "nameserver 128.250.66.5" > /etc/resolv.conf'
          sudo vsh -c 'copy running-config startup-config'

          sudo ip netns exec management rpm --import http://yum.puppetlabs.com/RPM-GPG-KEY-puppetlabs
          sudo ip netns exec management rpm --import http://yum.puppetlabs.com/RPM-GPG-KEY-reductive
          sudo ip netns exec management rpm --import http://yum.puppetlabs.com/RPM-GPG-KEY-puppet
          sudo ip netns exec management yum -y install http://yum.puppetlabs.com/puppetlabs-release-pc1-cisco-wrlinux-5.noarch.rpm
          sudo ip netns exec management yum -y install puppet

          sudo bash -c "echo -e '[main]\nserver = master\n[agent]\npluginsync  = true\nignorecache = true' > /etc/puppetlabs/puppet/puppet.conf"

          sudo ip netns exec management /opt/puppetlabs/puppet/bin/gem install --no-rdoc --no-ri cisco_node_utils

          echo -e '\n\n----------------\n\nProvisioning complete, next connect to the NX-OSv instance ("vagrant ssh n9kv1") and run the puppet agent ("sudo /opt/puppetlabs/bin/puppet agent -t")\n'

        SHELL
  end
 
  config.vm.define "n9kv2" do |n9kv2|
        n9kv2.vm.box = nxos_box_name

        if Vagrant.has_plugin?("vagrant-cachier")
          config.cache.disable!
        end

        n9kv2.ssh.insert_key = false
        n9kv2.vm.boot_timeout = 420
        n9kv2.vm.synced_folder '.', '/vagrant', disabled: true
        n9kv2.vm.network "forwarded_port", guest: 80, host: 8081, auto_correct: true
        n9kv2.vm.network "private_network", ip: "192.168.1.3", auto_config: false, virtualbox__intnet: "nxosv_network1"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network2"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network3"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network4"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network5"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network6"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network7"
        n9kv2.vm.provider :virtualbox do |vb|
                vb.customize ['modifyvm',:id,'--uartmode1','server','\\\\.\pipe\COM2']
                vb.customize ["modifyvm",:id,"--nicpromisc2","allow-all"]
                vb.customize ['modifyvm',:id,'--nicpromisc3','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc4','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc5','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc6','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc7','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc8','allow-all']
                vb.customize "pre-boot", [
                       "storageattach", :id,
                       "--storagectl", "SATA",
                       "--port", "1",
                       "--device", "0",
                       "--type", "dvddrive",
                       "--medium", "./nxos_config.iso",
                ]
        end
        n9kv2.vm.provision "shell", privileged: true, inline: <<-SHELL
          sleep 30 #otherwise the interfaces might not be ready for configuration

          # Configure Eth1/1 with unique MAC and IP

          echo -e 'hostname n9kv2\nvrf context management\n ip route 0.0.0.0/0 10.0.2.3\ndefault interface Ethernet1/1\ninterface Ethernet1/1\n no shutdown\n no switchport\n\n mac-address 1.1.2'> /tmp/mac-cfg
          sudo vsh -r /tmp/mac-cfg
          sudo ip add add 192.168.1.2/24 dev Eth1-1

          echo "192.168.1.254    master.unimelb.net.au master">>/etc/hosts
          sudo bash -c  'echo "nameserver 128.250.66.5" > /etc/resolv.conf'
          sudo vsh -c 'copy running-config startup-config'

          sudo ip netns exec management rpm --import http://yum.puppetlabs.com/RPM-GPG-KEY-puppetlabs
          sudo ip netns exec management rpm --import http://yum.puppetlabs.com/RPM-GPG-KEY-reductive
          sudo ip netns exec management rpm --import http://yum.puppetlabs.com/RPM-GPG-KEY-puppet
          sudo ip netns exec management yum -y install http://yum.puppetlabs.com/puppetlabs-release-pc1-cisco-wrlinux-5.noarch.rpm
          sudo ip netns exec management yum -y install puppet

          sudo bash -c "echo -e '[main]\nserver = master\n[agent]\npluginsync  = true\nignorecache = true' > /etc/puppetlabs/puppet/puppet.conf"

          sudo ip netns exec management /opt/puppetlabs/puppet/bin/gem install --no-rdoc --no-ri cisco_node_utils

          echo -e '\n\n----------------\n\nProvisioning complete, next connect to the NX-OSv instance ("vagrant ssh n9kv2") and run the puppet agent ("sudo /opt/puppetlabs/bin/puppet agent -t")\n'

        SHELL
  end
end
